QBCore = nil
local banlength = nil
local banreason = 'Unknown'
local kickreason = 'Unknown'

CreateThread(function()
    while QBCore == nil do
        TriggerEvent('QBCore:GetObject', function(obj)
            QBCore = obj
        end)
        Wait(200)
    end
end)

local menu = MenuV:CreateMenu(false, 'Admin-menyn', 'topright', 155, 0, 0, 'size-125', 'none', 'menuv', 'test')
local menu2 = MenuV:CreateMenu(false, 'Administrat√∂rsalternativ', 'topright', 155, 0, 0, 'size-125', 'none', 'menuv', 'test1')
local menu3 = MenuV:CreateMenu(false, 'Sj√§lvalternativ', 'topright', 155, 0, 0, 'size-125', 'none', 'menuv', 'test2')
local menu4 = MenuV:CreateMenu(false, 'Spelare online', 'topright', 155, 0, 0, 'size-125', 'none', 'menuv', 'test3')
local menu5 = MenuV:CreateMenu(false, 'Hantera server', 'topright', 155, 0, 0, 'size-125', 'none', 'menuv', 'test4')
local menu6 = MenuV:CreateMenu(false, 'Tillg√§ngliga v√§deralternativ', 'topright', 155, 0, 0, 'size-125', 'none', 'menuv', 'test5')
local menu7 = MenuV:CreateMenu(false, 'Kontrollera aktuella/l√§gg till √•terf√∂rs√§ljare', 'topright', 155, 0, 0, 'size-125', 'none', 'menuv', 'test6')
local menu8 = MenuV:CreateMenu(false, 'Ban', 'topright', 155, 0, 0, 'size-150', 'none', 'menuv', 'test7', 'native')
local menu9 = MenuV:CreateMenu(false, 'Kick', 'topright', 155, 0, 0, 'size-150', 'none', 'menuv', 'test8', 'native')
local menu10 = MenuV:CreateMenu(false, 'Beh√∂righeter', 'topright', 155, 0, 0, 'size-150', 'none', 'menuv', 'test9', 'native')

RegisterNetEvent('qb-admin:client:openMenu')
AddEventHandler('qb-admin:client:openMenu', function()
    MenuV:OpenMenu(menu)
end)

local menu_button = menu:AddButton({
    icon = 'üòÉ',
    label = 'Administrat√∂rsalternativ',
    value = menu2,
    description = '√ñvrigt. Administrat√∂rsalternativ'
})
local menu_button2 = menu:AddButton({
    icon = 'üòÉ',
    label = 'Spelarhantering',
    value = menu4,
    description = 'Visa lista √∂ver spelare'
})
local menu_button3 = menu:AddButton({
    icon = 'üòÉ',
    label = 'Serverhantering',
    value = menu5,
    description = '√ñvrigt. Serveralternativ'
})

local menu_button4 = menu2:AddButton({
    icon = 'üòÉ',
    label = 'Sj√§lvalternativ',
    value = menu3,
    description = '√ñvrigt. Sj√§lvalternativ'
})
local menu_button5 = menu3:AddCheckbox({
    icon = 'üé•',
    label = 'NoClip',
    value = menu3,
    description = 'Aktivera/avaktivera NoClip'
})
local menu_button6 = menu3:AddButton({
    icon = 'üè•',
    label = '√Öteruppliva',
    value = menu3,
    description = '√Öteruppliva dig sj√§lv'
})
local menu_button7 = menu3:AddCheckbox({
    icon = 'üëª',
    label = 'Osynlig',
    value = menu3,
    description = 'Aktivera/avaktivera Osynlig'
})
local menu_button8 = menu3:AddCheckbox({
    icon = '‚ö°',
    label = 'Gudl√§ge',
    value = menu3,
    description = 'Aktivera/avaktivera Gud l√§ge'
})
local menu_button9 = menu3:AddCheckbox({
    icon = 'üî´',
    label = 'Ta bort laser',
    value = menu3,
    description = 'Aktivera/avaktivera laser'
})
local menu_button11 = menu5:AddButton({
    icon = 'üå°Ô∏è',
    label = 'V√§deralternativ',
    value = menu6,
    description = '√Ñndra v√§der'
})
--[[ local menu_button12 = menu5:AddButton({
    icon = 'üòÉ',
    label = 'Manage Dealers',
    value = menu7,
    description = 'Create/Delete Dealers'
}) ]]
local menu_buttom13 = menu5:AddSlider({
    icon = '‚è≤Ô∏è',
    label = 'Server tid',
    value = GetClockHours(),
    values = {{
        label = '00',
        value = '00',
        description = 'Tid'
    }, {
        label = '01',
        value = '01',
        description = 'Tid'
    }, {
        label = '02',
        value = '02',
        description = 'Tid'
    }, {
        label = '03',
        value = '03',
        description = 'Tid'
    }, {
        label = '04',
        value = '04',
        description = 'Tid'
    }, {
        label = '05',
        value = '05',
        description = 'Tid'
    }, {
        label = '06',
        value = '06',
        description = 'Tid'
    }, {
        label = '07',
        value = '07',
        description = 'Tid'
    }, {
        label = '08',
        value = '08',
        description = 'Tid'
    }, {
        label = '09',
        value = '09',
        description = 'Tid'
    }, {
        label = '10',
        value = '10',
        description = 'Tid'
    }, {
        label = '11',
        value = '11',
        description = 'Tid'
    }, {
        label = '12',
        value = '12',
        description = 'Tid'
    }, {
        label = '13',
        value = '13',
        description = 'Tid'
    }, {
        label = '14',
        value = '14',
        description = 'Time'
    }, {
        label = '15',
        value = '15',
        description = 'Tid'
    }, {
        label = '16',
        value = '16',
        description = 'Tid'
    }, {
        label = '17',
        value = '17',
        description = 'Tid'
    }, {
        label = '18',
        value = '18',
        description = 'Tid'
    }, {
        label = '19',
        value = '19',
        description = 'Tid'
    }, {
        label = '20',
        value = '20',
        description = 'Tid'
    }, {
        label = '21',
        value = '21',
        description = 'Tid'
    }, {
        label = '22',
        value = '22',
        description = 'Tid'
    }, {
        label = '23',
        value = '23',
        description = 'Tid'
    }}
})

menu_button11:On("select",function()
local elements = {
        [1] = {
            icon = '‚òÄÔ∏è',
            label = 'Extra soligt',
            value = "EXTRASUNNY",
            description = 'Jag sm√§lter!'
        },
        [2] = {
            icon = '‚òÄÔ∏è',
            label = 'Soligt',
            value = "CLEAR",
            description = 'Den perfekta dagen!'
        },
        [3] = {
            icon = '‚òÄÔ∏è',
            label = 'Neutral',
            value = "NEUTRAL",
            description = 'Bara en vanlig dag!'
        },
        [4] = {
            icon = 'üåÅ',
            label = 'Dimma',
            value = "SMOG",
            description = 'R√∂kmaskin!'
        },
        [5] = {
            icon = 'üå´Ô∏è',
            label = 'Dimma',
            value = "FOGGY",
            description = 'R√∂kmaskin x2!'
        },
        [6] = {
            icon = '‚õÖ',
            label = 'Molnig',
            value = "OVERCAST",
            description = 'Inte f√∂r soligt!'
        },
        [7] = {
            icon = '‚òÅÔ∏è',
            label = 'Molnig',
            value = "CLOUDS",
            description = 'Var √§r solen?'
        },
        [8] = {
            icon = 'üå§Ô∏è',
            label = 'Dimma f√∂rsvinner',
            value = "CLEARING",
            description = 'Molnen b√∂rjar klarna!'
        },
        [9] = {
            icon = '‚òÇÔ∏è',
            label = 'Regn',
            value = "RAIN",
            description = 'F√• det att regna!'
        },
       
        [10] = {
            icon = '‚õàÔ∏è',
            label = '√Öska',
            value = "THUNDER",
            description = 'Spring och g√∂m!'
        },
        [11] = {
            icon = '‚ùÑÔ∏è',
            label = 'Sn√∂',
            value = "SNOW",
            description = '√Ñr det kallt h√§r ute?'
        },
        [12] = {
            icon = 'üå®Ô∏è',
            label = 'Sn√∂storm',
            value = "BLIZZARD",
            description = 'Sn√∂maskin?'
        },
        [13] = {
            icon = '‚ùÑÔ∏è',
            label = 'L√§tt sn√∂',
            value = "SNOWLIGHT",
            description = 'B√∂rjar k√§nnas som jul!'
        },
        [14] = {
            icon = 'üå®Ô∏è',
            label = 'Tung sn√∂ (JUL)',
            value = "XMAS",
            description = 'Sn√∂bollskrig!'
        },
        [15] = {
            icon = 'üéÉ',
            label = 'Halloween',
            value = "HALLOWEEN",
            description = 'Vad var det f√∂r ljud?!'
        }
    }
    MenuV:OpenMenu(menu6)
    for k,v in ipairs(elements) do 
        local menu_button14 = menu6:AddButton({icon = v.icon,label = v.label,value = v,description = v.description,select = function(btn) 
        local selection = btn.Value
        print(selection.value)
        TriggerServerEvent('qb-weathersync:server:setWeather', selection.value)
            QBCore.Functions.Notify('Weather Changed To: '..selection.label)
        end})
    end
end)

local menu_button29 = menu7:AddButton({
    icon = 'üîå',
    label = 'Befintliga √•terf√∂rs√§ljare',
    value = menu7,
    description = 'Skapade √•terf√∂rs√§ljare'
})
local menu_button30 = menu7:AddButton({
    icon = '‚ûï',
    label = 'Skapa √•terf√∂rs√§ljare',
    value = menu7,
    description = 'Skapa en ny √•terf√∂rs√§ljare'
})

-- Player List
menu_button2:On('select', function(item)
    menu4:ClearItems()
    QBCore.Functions.TriggerCallback('test:getplayers', function(players)
        for k, v in pairs(players) do
            local menu_button10 = menu4:AddButton({
                label = 'ID:' .. v["id"] .. ' | ' .. v["name"],
                value = v,
                description = 'Player Name',
                select = function(btn)
                    local select = btn.Value -- get all the values from v!
                    
                    OpenPlayerMenus(select) -- only pass what i select nothing else

                end
            }) -- WORKS
        end
    end)
end)

menu_buttom13:On("select", function(item, value)
    TriggerServerEvent("qb-weathersync:server:setTime", value, value)
    QBCore.Functions.Notify("Time changed to " .. value .. " hs 00 min")

end)

function OpenPlayerMenus(player)

    local Players = MenuV:CreateMenu(false, player.cid .. ' Options', 'topright', 155, 0, 0, 'size-125', 'none', 'menuv') -- Players Sub Menu
    Players:ClearItems()
    MenuV:OpenMenu(Players)
    elements = {
        [1] = {
            icon = 'üíÄ',
            label = "D√∂da",
            value = "kill",
            description = "D√∂da " .. player.cid
        },
        [2] = {
            icon = 'üè•',
            label = "√Öteruppliva",
            value = "revive",
            description = "√Öteruppliva " .. player.cid
        },
        [3] = {
            icon = 'ü•∂',
            label = "Freeze",
            value = "freeze",
            description = "Freeze " .. player.cid
        },
        [4] = {
            icon = 'üëÄ',
            label = "Spectate",
            value = "spectate",
            description = "Spectate " .. player.cid
        },
        [5] = {
            icon = '‚û°Ô∏è',
            label = "G√• till",
            value = "goto",
            description = "G√• till " .. player.cid .. " Position"
        },
        [6] = {
            icon = '‚¨ÖÔ∏è',
            label = "Ta hit personen",
            value = "bring",
            description = "Ta hit personen " .. player.cid .. " to your position"
        },
        [7] = {
            icon = 'üéí',
            label = "√ñppna inventory",
            value = "inventory",
            description = "Open " .. player.cid .. " inventorys"
        },
        [8] = {
            icon = 'üëï',
            label = "Ge Kl√§dmeny",
            value = "cloth",
            description = "Ge Kl√§dmeny till" .. player.cid
        },
        [9] = {
            icon = 'ü•æ',
            label = "Kick",
            value = "kick",
            description = "Kick " .. player.cid .. "Du m√•ste ge en anledning"
        },
        [10] = {
            icon = 'üö´',
            label = "Ban",
            value = "ban",
            description = "Ban " .. player.cid .. "Du m√•ste ge en anledning"
        },
        [11] = {
            icon = 'üéüÔ∏è',
            label = "Beh√∂righeter",
            value = "perms",
            description = "Ge " .. player.cid .. "Beh√∂righeter"
        }
    }
    for k, v in ipairs(elements) do
        local menu_button10 = Players:AddButton({
            icon = v.icon,
            label = ' ' .. v.label,
            value = v.value,
            description = v.description,
            select = function(btn)
                local values = btn.Value
                if values ~= "ban" and values ~= "kick" and values ~= "perms" then
                    TriggerServerEvent('qb-admin:server:'..values, player)
                elseif values == "ban" then
                    OpenBanMenu(player)
                elseif values == "kick" then
                    OpenKickMenu(player)
                elseif values == "perms" then
                    OpenPermsMenu(player)
                end
            end
        })
    end
end

function OpenBanMenu(banspeler)
    MenuV:OpenMenu(menu8)
    menu8:ClearItems()
    local menu_button15 = menu8:AddButton({
        icon = '',
        label = 'Anledning',
        value = "reason",
        description = 'Ban Anledning',
        select = function(btn)
            banreason = LocalInput('Ban Anledning', 255, 'Anledning')
        end
    })

    local menu_button16 = menu8:AddSlider({
        icon = '‚è≤Ô∏è',
        label = 'L√§ngd',
        value = '3600',
        values = {{
            label = '1 timme',
            value = '3600',
            description = 'Banl√§ngd'
        }, {
            label = '6 timmar',
            value ='21600',
            description = 'Banl√§ngd'
        }, {
            label = '12 timmar',
            value = '43200',
            description = 'Banl√§ngd'
        }, {
            label = '1 Dag',
            value = '86400',
            description = 'Banl√§ngd'
        }, {
            label = '3 Dagar',
            value = '259200',
            description = 'Banl√§ngd'
        }, {
            label = '1 vecka',
            value = '604800',
            description = 'Banl√§ngd'
        }, {
            label = '1 m√•nad',
            value = '2678400',
            description = 'Banl√§ngd'
        }, {
            label = '3 m√•nader',
            value = '8035200',
            description = 'Banl√§ngd'
        }, {
            label = '6 m√•nader',
            value = '16070400',
            description = 'Banl√§ngd'
        }, {
            label = '1 √•r',
            value = '32140800',
            description = 'Banl√§ngd'
        }, {
            label = 'Permanent',
            value = '99999999999',
            description = 'Banl√§ngd'
        }, {
            label = 'Sj√§lv',
            value = "self",
            description = 'Hur l√§nge'
        }},
        select = function(btn, newValue, oldValue)
            if newValue == "self" then
                banlength = LocalInputInt('Ban Length', 11, 'Seconds')
            else
                banlength = newValue
            end
        end
    })

    local menu_button17 = menu8:AddButton({
        icon = '',
        label = 'Bekr√§fta',
        value = "ban",
        description = 'Bekr√§fta f√∂rbudet',
        select = function(btn)
            if banreason ~= 'Unknown' and banlength ~= nil then
                TriggerServerEvent('qb-admin:server:ban', banspeler, banlength, banreason)
                banreason = 'Unknown'
                banlength = nil
            else
                QBCore.Functions.Notify('Du m√•ste ange ett sk√§l och ange en l√§ngd f√∂r f√∂rbudet!', 'error')
            end
        end
    })
end

function OpenKickMenu(kickplayer)
    MenuV:OpenMenu(menu9)
    menu9:ClearItems()
    local menu_button19 = menu9:AddButton({
        icon = '',
        label = 'Anledning',
        value = "reason",
        description = 'Kick Anledning',
        select = function(btn)
            kickreason = LocalInput('Kick Anledning', 255, 'Anledning')
        end
    })

    local menu_button18 = menu9:AddButton({
        icon = '',
        label = 'Bekr√§fta',
        value = "kick",
        description = 'Bekr√§fta sparken',
        select = function(btn)
            if kickreason ~= 'Unknown' then
                TriggerServerEvent('qb-admin:server:kick', kickplayer, kickreason)
                kickreason = 'Unknown'
            else
                QBCore.Functions.Notify('Du m√•ste ge en anledning!', 'error')
            end
        end
    })
end

function OpenPermsMenu(permsply)
    QBCore.Functions.TriggerCallback('qb-admin:server:getrank', function(rankk)
        if rankk then
            local selectedgroup = 'Unknown'
            MenuV:OpenMenu(menu10)
            menu10:ClearItems()
            local menu_button20 = menu10:AddSlider({
                icon = '',
                label = 'Grupp',
                value = 'user',
                values = {{
                    label = 'User',
                    value = 'user',
                    description = 'Grupp'
                }, {
                    label = 'Admin',
                    value = 'admin',
                    description = 'Grupp'
                }, {
                    label = 'God',
                    value = 'god',
                    description = 'Grupp'
                }},
                select = function(btn)
                    local vcal = btn.Value
                    if vcal == 1 then
                        selectedgroup = {}
                        table.insert(selectedgroup, {rank = "user", label = "User"})
                    elseif vcal == 2 then
                        selectedgroup = {}
                        table.insert(selectedgroup, {rank = "admin", label = "Admin"})
                    elseif vcal == 3 then
                        selectedgroup = {}
                        table.insert(selectedgroup, {rank = "god", label = "God"})
                    end
                end
            })

            local menu_button21 = menu10:AddButton({
                icon = '',
                label = 'Bekr√§fta',
                value = "giveperms",
                description = 'Ge beh√∂righetsgruppen',
                select = function(btn)
                    if selectedgroup ~= 'Unknown' then
                        TriggerServerEvent('qb-admin:server:setPermissions', permsply.id, selectedgroup)
                        selectedgroup = 'Unknown'
                    else
                        QBCore.Functions.Notify('V√§lj en grupp!', 'error')
                    end
                end
            })
        else
            MenuV:CloseMenu(menu)
        end
    end)
end

-- Toggle NoClip

menu_button5:On('change', function(item, newValue, oldValue)
    ToggleNoClipMode()
end)

-- Revive Self

menu_button6:On('select', function(item)
    TriggerEvent('hospital:client:Revive', PlayerPedId())
end)

-- Invisible

local invisible = false
menu_button7:On('change', function(item, newValue, oldValue)
    if not invisible then
        invisible = true
        SetEntityVisible(PlayerPedId(), false, 0)
    else
        invisible = false
        SetEntityVisible(PlayerPedId(), true, 0)
    end
end)

-- Godmode

local godmode = false
menu_button8:On('change', function(item, newValue, oldValue)
    if not invisible then
        godmode = true
        SetPlayerInvincible(PlayerPedId(), true)
    else
        godmode = false
        SetPlayerInvincible(PlayerPedId(), false)
    end
end)

-- Delete Laser

local deleteLazer = false
menu_button9:On('change', function(item, newValue, oldValue)
    if not deleteLazer then
        deleteLazer = true
    else
        deleteLazer = false
    end
end)

function RotationToDirection(rotation)
	local adjustedRotation = 
	{ 
		x = (math.pi / 180) * rotation.x, 
		y = (math.pi / 180) * rotation.y, 
		z = (math.pi / 180) * rotation.z 
	}
	local direction = 
	{
		x = -math.sin(adjustedRotation.z) * math.abs(math.cos(adjustedRotation.x)), 
		y = math.cos(adjustedRotation.z) * math.abs(math.cos(adjustedRotation.x)), 
		z = math.sin(adjustedRotation.x)
	}
	return direction
end

function RayCastGamePlayCamera(distance)
    local cameraRotation = GetGameplayCamRot()
	local cameraCoord = GetGameplayCamCoord()
	local direction = RotationToDirection(cameraRotation)
	local destination = 
	{ 
		x = cameraCoord.x + direction.x * distance, 
		y = cameraCoord.y + direction.y * distance, 
		z = cameraCoord.z + direction.z * distance 
	}
	local a, b, c, d, e = GetShapeTestResult(StartShapeTestRay(cameraCoord.x, cameraCoord.y, cameraCoord.z, destination.x, destination.y, destination.z, -1, PlayerPedId(), 0))
	return b, c, e
end

function DrawEntityBoundingBox(entity, color)
    local model = GetEntityModel(entity)
    local min, max = GetModelDimensions(model)
    local rightVector, forwardVector, upVector, position = GetEntityMatrix(entity)

    -- Calculate size
    local dim = 
	{ 
		x = 0.5*(max.x - min.x), 
		y = 0.5*(max.y - min.y), 
		z = 0.5*(max.z - min.z)
	}

    local FUR = 
    {
		x = position.x + dim.y*rightVector.x + dim.x*forwardVector.x + dim.z*upVector.x, 
		y = position.y + dim.y*rightVector.y + dim.x*forwardVector.y + dim.z*upVector.y, 
		z = 0
    }

    local FUR_bool, FUR_z = GetGroundZFor_3dCoord(FUR.x, FUR.y, 1000.0, 0)
    FUR.z = FUR_z
    FUR.z = FUR.z + 2 * dim.z

    local BLL = 
    {
        x = position.x - dim.y*rightVector.x - dim.x*forwardVector.x - dim.z*upVector.x,
        y = position.y - dim.y*rightVector.y - dim.x*forwardVector.y - dim.z*upVector.y,
        z = 0
    }
    local BLL_bool, BLL_z = GetGroundZFor_3dCoord(FUR.x, FUR.y, 1000.0, 0)
    BLL.z = BLL_z

    -- DEBUG
    local edge1 = BLL
    local edge5 = FUR

    local edge2 = 
    {
        x = edge1.x + 2 * dim.y*rightVector.x,
        y = edge1.y + 2 * dim.y*rightVector.y,
        z = edge1.z + 2 * dim.y*rightVector.z
    }

    local edge3 = 
    {
        x = edge2.x + 2 * dim.z*upVector.x,
        y = edge2.y + 2 * dim.z*upVector.y,
        z = edge2.z + 2 * dim.z*upVector.z
    }

    local edge4 = 
    {
        x = edge1.x + 2 * dim.z*upVector.x,
        y = edge1.y + 2 * dim.z*upVector.y,
        z = edge1.z + 2 * dim.z*upVector.z
    }

    local edge6 = 
    {
        x = edge5.x - 2 * dim.y*rightVector.x,
        y = edge5.y - 2 * dim.y*rightVector.y,
        z = edge5.z - 2 * dim.y*rightVector.z
    }

    local edge7 = 
    {
        x = edge6.x - 2 * dim.z*upVector.x,
        y = edge6.y - 2 * dim.z*upVector.y,
        z = edge6.z - 2 * dim.z*upVector.z
    }

    local edge8 = 
    {
        x = edge5.x - 2 * dim.z*upVector.x,
        y = edge5.y - 2 * dim.z*upVector.y,
        z = edge5.z - 2 * dim.z*upVector.z
    }

    DrawLine(edge1.x, edge1.y, edge1.z, edge2.x, edge2.y, edge2.z, color.r, color.g, color.b, color.a)
    DrawLine(edge1.x, edge1.y, edge1.z, edge4.x, edge4.y, edge4.z, color.r, color.g, color.b, color.a)
    DrawLine(edge2.x, edge2.y, edge2.z, edge3.x, edge3.y, edge3.z, color.r, color.g, color.b, color.a)
    DrawLine(edge3.x, edge3.y, edge3.z, edge4.x, edge4.y, edge4.z, color.r, color.g, color.b, color.a)
    DrawLine(edge5.x, edge5.y, edge5.z, edge6.x, edge6.y, edge6.z, color.r, color.g, color.b, color.a)
    DrawLine(edge5.x, edge5.y, edge5.z, edge8.x, edge8.y, edge8.z, color.r, color.g, color.b, color.a)
    DrawLine(edge6.x, edge6.y, edge6.z, edge7.x, edge7.y, edge7.z, color.r, color.g, color.b, color.a)
    DrawLine(edge7.x, edge7.y, edge7.z, edge8.x, edge8.y, edge8.z, color.r, color.g, color.b, color.a)
    DrawLine(edge1.x, edge1.y, edge1.z, edge7.x, edge7.y, edge7.z, color.r, color.g, color.b, color.a)
    DrawLine(edge2.x, edge2.y, edge2.z, edge8.x, edge8.y, edge8.z, color.r, color.g, color.b, color.a)
    DrawLine(edge3.x, edge3.y, edge3.z, edge5.x, edge5.y, edge5.z, color.r, color.g, color.b, color.a)
    DrawLine(edge4.x, edge4.y, edge4.z, edge6.x, edge6.y, edge6.z, color.r, color.g, color.b, color.a)
end

Citizen.CreateThread(function()	
	while true do
		Citizen.Wait(0)
        if deleteLazer then
            local color = {r = 255, g = 255, b = 255, a = 200}
            local position = GetEntityCoords(PlayerPedId())
            local hit, coords, entity = RayCastGamePlayCamera(1000.0)
            -- If entity is found then verifie entity
            if hit and (IsEntityAVehicle(entity) or IsEntityAPed(entity) or IsEntityAnObject(entity)) then
                local entityCoord = GetEntityCoords(entity)
                local minimum, maximum = GetModelDimensions(GetEntityModel(entity))
                DrawEntityBoundingBox(entity, color)
                DrawLine(position.x, position.y, position.z, coords.x, coords.y, coords.z, color.r, color.g, color.b, color.a)
                QBCore.Functions.DrawText3D(entityCoord.x, entityCoord.y, entityCoord.z, "Obj: " .. entity .. " Model: " .. GetEntityModel(entity).. " \nPress [~g~E~s~] to delete the object!", 2)
                -- When E pressed then remove targeted entity
                if IsControlJustReleased(0, 38) then
                    -- Set as missionEntity so the object can be remove (Even map objects)
                    SetEntityAsMissionEntity(entity, true, true)
                    --SetEntityAsNoLongerNeeded(entity)
                    --RequestNetworkControl(entity)
                    DeleteEntity(entity)
                end
            -- Only draw of not center of map
            elseif coords.x ~= 0.0 and coords.y ~= 0.0 then
                -- Draws line to targeted position
                DrawLine(position.x, position.y, position.z, coords.x, coords.y, coords.z, color.r, color.g, color.b, color.a)
                DrawMarker(28, coords.x, coords.y, coords.z, 0.0, 0.0, 0.0, 0.0, 180.0, 0.0, 0.1, 0.1, 0.1, color.r, color.g, color.b, color.a, false, true, 2, nil, nil, false)
            end
        else
            Citizen.Wait(1000)
        end
	end
end)
